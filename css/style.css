/* Performing a basic reset inorder to make every browser render the page in the same way*/
/* applies stlye to all elements */
*
*::after
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit; }

html {
  font-size: 62.5%; }

/* we specify font styles in body becus properties related to fonts are inherited. Better practice */
body {
  box-sizing: border-box; }

/* theyyare two type of animation in css. -transition and  */
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

/* we specify font styles in body becus properties related to fonts are inherited. Better practice */
body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  line-height: 1.7;
  color: #777;
  padding: 3rem; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden;
  margin-bottom: 6rem; }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-in-out;
    /* animation-delay: 2s; */
    /* animation-iteration-count: 3; */ }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.74rem;
    animation-name: moveInRight;
    animation-duration: 1s;
    animation-timing-function: ease-out; }

/* pseudo classes are a special state of a selector */
.btn:link, .btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  text-align: center;
  border-radius: 10rem;
  transition: all .2s;
  position: relative;
  font-size: 1.6rem; }

.btn:hover {
  transform: translateY(-0.3rem);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }
  .btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0; }

.btn:active {
  transform: translateY(-0.1rem);
  box-shadow: 0 5rem 1rem rgba(0, 0, 0, 0.2); }

.btn--white {
  background-color: #fff;
  color: #777; }
  .btn--white::after {
    background-color: #fff; }

.btn::after {
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all .4s; }

.btn--animated {
  animation: moveInBottom 1s ease-out .75s;
  animation-fill-mode: backwards;
  /*Will automatically apply the zero percent before the animation starts*/ }

.grid-test .row {
  max-width: 114rem;
  background-color: #eee;
  margin: 0 auto;
  color: #fff; }
  .grid-test .row:not(:last-child) {
    margin-bottom: 8rem; }
  .grid-test .row::after {
    content: "";
    clear: both;
    display: table; }
  .grid-test .row [class^="col-"] {
    float: left;
    background-color: orangered; }
    .grid-test .row [class^="col-"]:not(:last-child) {
      margin-right: 5rem; }
  .grid-test .row .col-1-of-2 {
    width: calc((100% - 5rem)/2); }
  .grid-test .row .col-1-of-3 {
    width: calc((100% - 2 * 5rem)/3); }
  .grid-test .row .col-1-of-4 {
    width: calc((100% - 3 * 5rem)/4); }
  .grid-test .row .col-2-of-3 {
    width: calc(2*((100% - 2 * 5rem)/3) + 5rem); }
  .grid-test .row .col-2-of-4 {
    width: calc(2 * ((100% - 3 * 5rem)/4) +  5rem); }
  .grid-test .row .col-3-of-4 {
    width: calc(3 * ((100% - 3 * 5rem)/4) +  2 *5rem); }

.header {
  /* This is approximately 95% of the viewport height */
  height: 95vh;
  /*Height of element should be 95% of veiwport height*/
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.801), rgba(40, 180, 133, 0.801)), url("../img/hero.jpg");
  block-size: cover;
  background-position: top;
  position: relative;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    /* this propety values are nolonger in relation to the parent values, But t the element it self*/
    text-align: center; }
